<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.1-SNAPSHOT</version>
		<relativePath/>
	</parent>
	<groupId>com.example</groupId>
	<artifactId>kafka-contract-test-producer</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>kafka-contract-test-producer</name>

	<developers>
		<developer>
			<name>Vassilis Spiliopoulos</name>
			<email>2billy@gmail.com</email>
			<organization>Personal project</organization>
			<organizationUrl>https://uk.linkedin.com/in/vassilis-spiliopoulos-578343a</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/vspiliop/kafka-contract-test-producer.git</connection>
		<developerConnection>scm:git:https://github.com/vspiliop/kafka-contract-test-producer.git</developerConnection>
		<url>https://github.com/vspiliop/kafka-contract-test-producer</url>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/vspiliop/kafka-contract-test-producer/issues</url>
	</issueManagement>

	<ciManagement>
		<system>Github Actions</system>
		<url>https://github.com/vspiliop/kafka-contract-test-producer/actions</url>
		<notifiers />
	</ciManagement>

	<url>https://github.com/vspiliop/kafka-contract-test-producer</url>
	<description>Demo project for Kafka producer contract testing</description>
	<properties>
		<java.version>19</java.version>
		<spring-cloud.version>2022.0.0</spring-cloud.version>
		<testcontainers.version>1.17.6</testcontainers.version>
		<avro.version>1.11.1</avro.version>
		<confluent.version>7.3.1</confluent.version>
		<maven-site-plugin.version>3.12.1</maven-site-plugin.version>
		<docs-maven-skin.version>2.3.1</docs-maven-skin.version>
		<wagon-ssh.version>3.5.3</wagon-ssh.version>
		<spring-cloud-contract-maven-plugin.version>4.0.0</spring-cloud-contract-maven-plugin.version>
		<plantuml-maven-plugin.version>1.2</plantuml-maven-plugin.version>
		<plantuml.version>1.2023.0</plantuml.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>${avro.version}</version>
		</dependency>
		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-streams-avro-serde</artifactId>
			<version>${confluent.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-verifier</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>kafka</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-contract-maven-plugin</artifactId>
				<version>${spring-cloud-contract-maven-plugin.version}</version>
				<extensions>true</extensions>
				<configuration>
					<testFramework>JUNIT5</testFramework>
					<baseClassForTests>com.example.demo.BaseClass</baseClassForTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-test-sources/contracts</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-maven-plugin</artifactId>
				<version>${avro.version}</version>
				<configuration>
					<sourceDirectory>${project.basedir}/src/main/avro/</sourceDirectory>
				</configuration>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>schema</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven-site-plugin.version}</version>
				<configuration>
					<port>8081</port>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.bernardomg.maven.skins</groupId>
						<artifactId>docs-maven-skin</artifactId>
						<version>${docs-maven-skin.version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.maven.wagon</groupId>
						<artifactId>wagon-ssh</artifactId>
						<version>${wagon-ssh.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>com.github.jeluard</groupId>
				<artifactId>plantuml-maven-plugin</artifactId>
				<version>${plantuml-maven-plugin.version}</version>
				<configuration>
					<sourceFiles>
						<directory>${basedir}</directory>
						<includes>
							<include>src/main/plantuml/**/*.puml</include>
						</includes>
					</sourceFiles>
				</configuration>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>net.sourceforge.plantuml</groupId>
						<artifactId>plantuml</artifactId>
						<version>${plantuml.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-plantnum-generated-images-to-site</id>
						<phase>process-resources</phase>
						<configuration>
							<target>
								<copy todir="${basedir}/target/generated-site/resources/images">
									<fileset dir="${basedir}/target/plantuml"
											 includes="**/*.png"/>
								</copy>
								<copy todir="${basedir}/target/site-webapp/images">
									<fileset dir="${basedir}/target/plantuml"
											 includes="**/*.png"/>
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>confluent</id>
			<url>https://packages.confluent.io/maven/</url>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>
	<distributionManagement>
		<site>
			<id>kafka.producer.documentation</id>
			<name>Kafka Producer Documentation</name>
			<url>file:/Users/vassilisspiliopoulos/docs/${artifactId}/${version}</url>
		</site>
	</distributionManagement>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>
</project>
