@startuml
!include ./sprites.puml

package "Contract test" as contractTest{
  rectangle "test code" <<$cog>> as tst
    database "H2 Database" as db {
     rectangle data {
        rectangle d1
     }
     rectangle outbox {
      rectangle o1
     }
     o1 -> d1
    }

  component ServiceB1 as refd {
    rectangle "contracts/ example \n messages" as con
  }
  queue ti <<$kafka>>
  rectangle verify <<$cog>> as ver
  note bottom of db
   ServiceB2 service in-memory DB.

   ServiceB1 queries this DB and forwards
   appropriate data downstream.
  end note
}

note left of tst
    Triggers business logic
    by providing the "given" and "when"
    of contract test
end note

note bottom of ver
  Test code that verifies
  produced contract event
  follows advertised contract
end note

database artifactory as ar {
 rectangle jars
}

tst --> db: creates schema \n and inserts d1 and o1
refd --> ti: produces
ver -> ar: serviceB1-stubs.jar
ti -> ver
ar --> refd: kafka-schemas:7.4.0
con -> ver: "verifies \ncontracts"
refd --> db: queries

@enduml